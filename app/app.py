import streamlit as st
from typing import List

# –°–ø–∏—Å–æ–∫ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –≥—Ä—É–ø–ø –¥–ª—è –≤—ã–±–æ—Ä–∞
GROUPS = [
    "NO2", "SO3H", "CN", "PO4", "F", "Cl", "Br", "I", "OH", "NH2", "COOH", "CH3",
]

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
def calculate_similarity(lock: List[str], key: List[str]):
    return sum(1 for group in key if group in lock)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–ü–æ–¥–±–æ—Ä –ª–∏–≥–∞–Ω–¥–æ–≤",
    page_icon="üîë",
)

# –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
st.markdown("""
## –ü–æ–¥–±–æ—Ä —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –≥—Ä—É–ø–ø –ª–∏–≥–∞–Ω–¥–æ–≤ –¥–ª—è –º–æ–ª–µ–∫—É–ª

### –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?
–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–º–æ–≥–∞–µ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –≥—Ä—É–ø–ø—ã –¥–ª—è –ª–∏–≥–∞–Ω–¥–∞, –∏—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥–∏–∫—É ¬´–∫–ª—é—á-–∑–∞–º–æ–∫¬ª. –°–∏—Å—Ç–µ–º–∞ –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç, —Å–∫–æ–ª—å–∫–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –≥—Ä—É–ø–ø –∫–ª—é—á–∞ —Å–æ–≤–ø–∞–¥–∞—é—Ç —Å –≥—Ä—É–ø–ø–∞–º–∏ –∑–∞–º–∫–∞ –∏ –Ω–∞—Ö–æ–¥–∏—Ç –ª—É—á—à–∏–π –≤–∞—Ä–∏–∞–Ω—Ç.

### –®–∞–≥–∏:
1. –í—ã–±–µ—Ä–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –≥—Ä—É–ø–ø—ã –¥–ª—è –º–æ–ª–µ–∫—É–ª—ã (–∑–∞–º–∫–∞).
2. –£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –ª–∏–≥–∞–Ω–¥–æ–≤ –∏ –∏—Ö —Ä–∞–∑–º–µ—Ä.
3. –ü–æ–¥–±–µ—Ä–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –≥—Ä—É–ø–ø—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ª–∏–≥–∞–Ω–¥–∞.
4. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –Ω–∞–∏–ª—É—á—à–µ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ.
""")

# –í—ã–±–æ—Ä —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –≥—Ä—É–ø–ø –¥–ª—è –∑–∞–º–∫–∞
st.sidebar.markdown("### –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–º–∫–∞ (–º–æ–ª–µ–∫—É–ª—ã)")
lock = st.sidebar.multiselect("–í—ã–±–µ—Ä–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –≥—Ä—É–ø–ø—ã –º–æ–ª–µ–∫—É–ª—ã", options=GROUPS, default=[GROUPS[0], GROUPS[1]])

# –í–≤–æ–¥ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–ª—é—á–µ–π –∏ —Ä–∞–∑–º–µ—Ä–∞ –≥—Ä—É–ø–ø—ã
st.sidebar.markdown("### –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–ª—é—á–µ–π (–ª–∏–≥–∞–Ω–¥–æ–≤)")
num_keys = st.sidebar.slider("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∏–≥–∞–Ω–¥–æ–≤", min_value=1, max_value=5, value=3)
group_size = st.sidebar.slider("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥—Ä—É–ø–ø –Ω–∞ –ª–∏–≥–∞–Ω–¥", min_value=1, max_value=len(lock), value=len(lock))

# –û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
st.markdown(f"### –ü–æ–¥–±–µ—Ä–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –≥—Ä—É–ø–ø—ã –¥–ª—è **{num_keys}** –ª–∏–≥–∞–Ω–¥–æ–≤:")
keys = []
for i in range(num_keys):
    key = st.multiselect(f"–õ–∏–≥–∞–Ω–¥ {i + 1}", GROUPS, key=f"ligand_{i}", max_selections=group_size)
    keys.append(key)

# –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π
if st.button("–ù–∞–π—Ç–∏ –ª—É—á—à–∏–π –ª–∏–≥–∞–Ω–¥"):
    best_match = -1
    best_key = None

    for i, key in enumerate(keys):
        match_score = calculate_similarity(lock, key)
        
        if match_score > best_match:
            best_match = match_score
            best_key = key

    # –†–µ–∑—É–ª—å—Ç–∞—Ç: –≤—ã–≤–æ–¥ —Å–∞–º–æ–≥–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –ª–∏–≥–∞–Ω–¥–∞
    if best_key:
        st.success(f"–°–∞–º—ã–π –ø–æ–¥—Ö–æ–¥—è—â–∏–π –ª–∏–≥–∞–Ω–¥: **{', '.join(best_key)}** —Å —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ–º: **{best_match}**.")
    else:
        st.warning("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –ª–∏–≥–∞–Ω–¥.")
