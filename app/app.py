import streamlit as st

from typing import List


FUNCTIONAL_GROUPS = ["OH", "NH2", "COOH", "CH3", "SH", "NH", "CO"]


def evaluate_match(lock: List[str], key: List[str]):
    match_score = sum(1 for group in key if group in lock)
    
    return match_score


st.set_page_config(
    page_title="–ì–ª–∞–≤–Ω–∞—è",
    page_icon="üëã",
)

st.markdown("""
### –ü–æ–∏—Å–∫ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã—Ö —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π ¬´–∫–ª—é—á-–∑–∞–º–æ–∫¬ª –ø–æ —Ä–µ–ø–µ—Ä–Ω—ã–º –≥—Ä—É–ø–ø–∞–º

#### –û–ø–∏—Å–∞–Ω–∏–µ
–í –¥–∞–Ω–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–∏—Å–∫ –Ω–∞–∏–ª—É—á—à–µ–≥–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –º–µ–∂–¥—É –º–æ–ª–µ–∫—É–ª–æ–π (–∑–∞–º–∫–æ–º) –∏ –ª–∏–≥–∞–Ω–¥–∞–º–∏ (–∫–ª—é—á–∞–º–∏) –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏—Ö —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –≥—Ä—É–ø–ø. 

#### –ó–∞–¥–∞—á–∞
–ú–æ–¥–µ–ª—å ¬´–∫–ª—é—á-–∑–∞–º–æ–∫¬ª –∏–ª–ª—é—Å—Ç—Ä–∏—Ä—É–µ—Ç, –∫–∞–∫ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –≥—Ä—É–ø–ø—ã —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–æ–ª–µ–∫—É–ª –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É—é—Ç –¥—Ä—É–≥ —Å –¥—Ä—É–≥–æ–º. –ó–∞–¥–∞—á–∞ ‚Äî –≤—ã–±—Ä–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –≥—Ä—É–ø–ø—ã –¥–ª—è –∫–ª—é—á–µ–π (–ª–∏–≥–∞–Ω–¥–æ–≤) –∏ –Ω–∞–π—Ç–∏ —Ç–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ª—É—á—à–µ –≤—Å–µ–≥–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –∫ –∑–∞–¥–∞–Ω–Ω–æ–º—É –∑–∞–º–∫—É (–º–æ–ª–µ–∫—É–ª–µ –±–µ–ª–∫–∞).

#### –û—Ç–≤–µ—Ç
–°–∏—Å—Ç–µ–º–∞ –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –æ–±—â–∏—Ö —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –≥—Ä—É–ø–ø –∏ –≤—ã–≤–æ–¥–∏—Ç –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –∫–ª—é—á (–ª–∏–≥–∞–Ω–¥).
""")

lock = st.multiselect(label="–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–º–æ–∫ (–±–µ–ª–æ–∫)", options=FUNCTIONAL_GROUPS, default=[FUNCTIONAL_GROUPS[0], FUNCTIONAL_GROUPS[1]])

col1, col2 = st.columns(2, gap="medium")

with col1:
    num_keys = st.number_input(label="–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª—é—á–µ–π", min_value=1, max_value=5)

with col2:    
    group_size = st.number_input(label="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –≥—Ä—É–ø–ø—ã", min_value=1, max_value=len(lock), value=len(lock))


with st.container():
    st.markdown(f"–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ **{group_size}** —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –≥—Ä—É–ø–ø—ã –¥–ª—è –∫–ª—é—á–µ–π (–ª–∏–≥–∞–Ω–¥–æ–≤):")
    if num_keys != "":
        num_keys = int(num_keys)

        keys = []
        for i in range(num_keys):
            key = st.multiselect(f"–ö–ª—é—á **{i + 1}**", FUNCTIONAL_GROUPS, key=f"key_{i}", max_selections=group_size)
            keys.append(key)

    if st.button(label="–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è", use_container_width=True):
        best_score = -1
        
        for i, key in enumerate(keys):
            score = evaluate_match(lock, key)
            
            if score > best_score:
                best_score = score
                best_key = key

        # –í—ã–≤–æ–¥–∏–º –ª—É—á—à–∏–π –∫–ª—é—á
        st.markdown(f"–õ—É—á—à–∏–π –∫–ª—é—á: **{', '.join(best_key)}** —Å–æ —Å—Ç–µ–ø–µ–Ω—å—é –ø–æ—Ö–æ–∂–µ—Å—Ç–∏: **{best_score}**")




